{"version":3,"file":"AdMob.js","sourceRoot":"","sources":["../src/AdMob.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,EAAE,MAAM,kBAAkB,CAAC;AAEvD,OAAO,YAAY,MAAM,gBAAgB,CAAC;AAE1C;;;;GAIG;AACH,MAAM,CAAC,KAAK,UAAU,gBAAgB;IACpC,OAAO,CAAC,CAAC,YAAY,CAAC,oBAAoB,CAAC;AAC7C,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,oBAAoB,CAAC,YAA2B;IACpE,IAAI,CAAC,YAAY,CAAC,oBAAoB,EAAE;QACtC,MAAM,IAAI,mBAAmB,CAAC,gBAAgB,EAAE,sBAAsB,CAAC,CAAC;KACzE;IACD,MAAM,YAAY,CAAC,oBAAoB,CAAC,YAAY,IAAI,EAAE,CAAC,CAAC;AAC9D,CAAC","sourcesContent":["import { UnavailabilityError } from '@unimodules/core';\n\nimport ExpoAdsAdMob from './ExpoAdsAdMob';\n\n/**\n * Returns whether the AdMob API is enabled on the current device. This does not check the native configuration.\n *\n * @returns Async `boolean`, indicating whether the AdMob API is available on the current device. Currently this resolves `true` on iOS and Android only.\n */\nexport async function isAvailableAsync(): Promise<boolean> {\n  return !!ExpoAdsAdMob.setTestDeviceIDAsync;\n}\n\nexport async function setTestDeviceIDAsync(testDeviceID: string | null): Promise<void> {\n  if (!ExpoAdsAdMob.setTestDeviceIDAsync) {\n    throw new UnavailabilityError('expo-ads-admob', 'setTestDeviceIDAsync');\n  }\n  await ExpoAdsAdMob.setTestDeviceIDAsync(testDeviceID || '');\n}\n"]}